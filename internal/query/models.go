// Code generated by sqlc. DO NOT EDIT.

package query

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/immernote/immernote/internal/types"
	"github.com/jackc/pgtype"
)

type BlockAccessLevel string

const (
	BlockAccessLevelREADONLY    BlockAccessLevel = "READ_ONLY"
	BlockAccessLevelREADCOMMENT BlockAccessLevel = "READ_COMMENT"
	BlockAccessLevelREADWRITE   BlockAccessLevel = "READ_WRITE"
	BlockAccessLevelADMIN       BlockAccessLevel = "ADMIN"
)

func (e *BlockAccessLevel) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = BlockAccessLevel(s)
	case string:
		*e = BlockAccessLevel(s)
	default:
		return fmt.Errorf("unsupported scan type for BlockAccessLevel: %T", src)
	}
	return nil
}

type MemberType string

const (
	MemberTypeBOT    MemberType = "BOT"
	MemberTypeGUEST  MemberType = "GUEST"
	MemberTypeMEMBER MemberType = "MEMBER"
	MemberTypeADMIN  MemberType = "ADMIN"
)

func (e *MemberType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = MemberType(s)
	case string:
		*e = MemberType(s)
	default:
		return fmt.Errorf("unsupported scan type for MemberType: %T", src)
	}
	return nil
}

type Block struct {
	ID            uuid.UUID          `json:"id"`
	Type          string             `json:"type"`
	Rank          string             `json:"rank"`
	Content       string             `json:"content"`
	Format        string             `json:"format"`
	ParentBlockID pgtype.UUID        `json:"parent_block_id"`
	ParentPageID  pgtype.UUID        `json:"parent_page_id"`
	SpaceID       uuid.UUID          `json:"space_id"`
	CreatedBy     uuid.UUID          `json:"created_by"`
	ModifiedBy    uuid.UUID          `json:"modified_by"`
	CreatedAt     time.Time          `json:"created_at"`
	ModifiedAt    time.Time          `json:"modified_at"`
	DeletedAt     pgtype.Timestamptz `json:"deleted_at"`
}

type InstanceSetting struct {
	SettingKey   string             `json:"setting_key"`
	SettingValue string             `json:"setting_value"`
	CreatedAt    time.Time          `json:"created_at"`
	ModifiedAt   time.Time          `json:"modified_at"`
	DeletedAt    pgtype.Timestamptz `json:"deleted_at"`
}

type SchemaMigration struct {
	Version string `json:"version"`
}

type Space struct {
	ID              uuid.UUID           `json:"id"`
	Handle          string              `json:"handle"`
	Name            string              `json:"name"`
	Icon            types.SpaceIcon     `json:"icon"`
	Settings        types.SpaceSettings `json:"settings"`
	Domains         []string            `json:"domains"`
	InvitationToken pgtype.Text         `json:"invitation_token"`
	CreatedAt       time.Time           `json:"created_at"`
	ModifiedAt      time.Time           `json:"modified_at"`
	DeletedAt       pgtype.Timestamptz  `json:"deleted_at"`
}

type SpaceMember struct {
	UserID     uuid.UUID          `json:"user_id"`
	SpaceID    uuid.UUID          `json:"space_id"`
	Type       MemberType         `json:"type"`
	CreatedAt  time.Time          `json:"created_at"`
	ModifiedAt time.Time          `json:"modified_at"`
	DeletedAt  pgtype.Timestamptz `json:"deleted_at"`
}

type SpacePermission struct {
	SpaceID     uuid.UUID          `json:"space_id"`
	BlockID     uuid.UUID          `json:"block_id"`
	AccessLevel BlockAccessLevel   `json:"access_level"`
	CreatedAt   time.Time          `json:"created_at"`
	ModifiedAt  time.Time          `json:"modified_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type User struct {
	ID                 uuid.UUID          `json:"id"`
	Email              string             `json:"email"`
	Name               string             `json:"name"`
	Avatar             string             `json:"avatar"`
	Settings           types.UserSettings `json:"settings"`
	ConfirmationToken  pgtype.Text        `json:"confirmation_token"`
	ConfirmationSentAt pgtype.Timestamptz `json:"confirmation_sent_at"`
	InvitedAt          pgtype.Timestamptz `json:"invited_at"`
	ConfirmedAt        pgtype.Timestamptz `json:"confirmed_at"`
	CreatedAt          time.Time          `json:"created_at"`
	ModifiedAt         time.Time          `json:"modified_at"`
	DeletedAt          pgtype.Timestamptz `json:"deleted_at"`
}

type UserGroup struct {
	ID         uuid.UUID          `json:"id"`
	Name       string             `json:"name"`
	Icon       string             `json:"icon"`
	SpaceID    uuid.UUID          `json:"space_id"`
	CreatedAt  time.Time          `json:"created_at"`
	ModifiedAt time.Time          `json:"modified_at"`
	DeletedAt  pgtype.Timestamptz `json:"deleted_at"`
}

type UserGroupMember struct {
	UserID      uuid.UUID          `json:"user_id"`
	UserGroupID uuid.UUID          `json:"user_group_id"`
	CreatedAt   time.Time          `json:"created_at"`
	ModifiedAt  time.Time          `json:"modified_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type UserGroupPermission struct {
	UserGroupID uuid.UUID          `json:"user_group_id"`
	BlockID     uuid.UUID          `json:"block_id"`
	AccessLevel BlockAccessLevel   `json:"access_level"`
	CreatedAt   time.Time          `json:"created_at"`
	ModifiedAt  time.Time          `json:"modified_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type UserPermission struct {
	UserID      uuid.UUID          `json:"user_id"`
	BlockID     uuid.UUID          `json:"block_id"`
	AccessLevel BlockAccessLevel   `json:"access_level"`
	CreatedAt   time.Time          `json:"created_at"`
	ModifiedAt  time.Time          `json:"modified_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}
